{"version":3,"sources":["../out/Errors.js"],"names":["define","require","exports","Object","defineProperty","value","Errors","pageName","msg","Error","paramName","script","expectedType","index","name","url","error","routeString","resourceName"],"mappings":"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","sourcesContent":["define([\"require\", \"exports\"], function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    class Errors {\n        static pageNodeNotExists(pageName) {\n            let msg = `Page node named ${pageName} is not exists.`;\n            return new Error(msg);\n        }\n        static actionCanntNull(pageName) {\n            let msg = `Action of '${pageName}' can not be null.`;\n            return new Error(msg);\n        }\n        static argumentNull(paramName) {\n            var msg = `The argument \"${paramName}\" cannt be null.`;\n            return new Error(msg);\n        }\n        static modelFileExpecteFunction(script) {\n            var msg = `The eval result of script file \"${script}\" is expected a function.`;\n            return new Error(msg);\n        }\n        static paramTypeError(paramName, expectedType) {\n            var msg = `The param \"${paramName}\" is expected \"${expectedType}\" type.`;\n            return new Error(msg);\n        }\n        static paramError(msg) {\n            return new Error(msg);\n        }\n        static pathPairRequireView(index) {\n            var msg = `The view value is required for path pair, but the item with index \"${index}\" is miss it.`;\n            return new Error(msg);\n        }\n        static notImplemented(name) {\n            var msg = `'The method \"${name}\" is not implemented.'`;\n            return new Error(msg);\n        }\n        static routeExists(name) {\n            var msg = `Route named \"${name}\" is exists.`;\n            return new Error(msg);\n        }\n        static noneRouteMatched(url) {\n            var msg = `None route matched with url \"${url}\".`;\n            var error = new Error(msg);\n            return error;\n        }\n        static emptyStack() {\n            return new Error('The stack is empty.');\n        }\n        static canntParseUrl(url) {\n            var msg = `Can not parse the url \"${url}\" to route data.`;\n            return new Error(msg);\n        }\n        static canntParseRouteString(routeString) {\n            var msg = `Can not parse the route string \"${routeString}\" to route data.;`;\n            return new Error(msg);\n        }\n        static routeDataRequireController() {\n            var msg = 'The route data does not contains a \"controller\" file.';\n            return new Error(msg);\n        }\n        static routeDataRequireAction() {\n            var msg = 'The route data does not contains a \"action\" file.';\n            return new Error(msg);\n        }\n        static viewCanntNull() {\n            var msg = 'The view or viewDeferred of the page cannt null.';\n            return new Error(msg);\n        }\n        static createPageFail(pageName) {\n            var msg = `Create page \"${pageName}\" fail.`;\n            return new Error(msg);\n        }\n        static actionTypeError(pageName) {\n            let msg = `The action in page '${pageName}' is expect as function.`;\n            return new Error(msg);\n        }\n        static canntFindAction(pageName) {\n            let msg = `Cannt find action in page '${pageName}', is the exports has default field?`;\n            return new Error(msg);\n        }\n        static exportsCanntNull(pageName) {\n            let msg = `Exports of page '${pageName}' is null.`;\n            return new Error(msg);\n        }\n        static scrollerElementNotExists() {\n            let msg = \"Scroller element is not exists.\";\n            return new Error(msg);\n        }\n        static resourceExists(resourceName, pageName) {\n            let msg = `Rosource '${resourceName}' is exists in the resources of page '${pageName}'.`;\n            return new Error(msg);\n        }\n        static siteMapRootCanntNull() {\n            let msg = `The site map root node can not be null.`;\n            return new Error(msg);\n        }\n        static duplicateSiteMapNode(name) {\n            let msg = `The site map node ${name} is exists.`;\n            return new Error(msg);\n        }\n        static unexpectedNullValue() {\n            let msg = `Unexpected null value.`;\n            return new Error(msg);\n        }\n    }\n    exports.Errors = Errors;\n});\n"],"file":"Errors.js"}