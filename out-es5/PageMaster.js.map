{"version":3,"sources":["../out/PageMaster.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","define","require","exports","maishu_chitu_service_1","Page_1","Application_1","Errors_1","Object","defineProperty","PageMaster","containers","parser","pageCreated","Callbacks","pageShowing","pageShown","pageType","Page","pageDisplayType","PageDisplayerImplement","cachePages","page_stack","Array","nodes","MAX_PAGE_COUNT","error","defaultPageNodeParser","Errors","argumentNull","actions","p","parse","pageName","node","path","split","join","action","createDefaultAction","loadjs","name","url","page","actionExports","exportsCanntNull","_action","default","canntFindAction","isClass","reslove","requirejs","err","fire","pageUrl","containerName","values","cachePage","data","isNew","createPage","on_pageCreated","element","createPageElement","displayer","container","containerIsNotExists","console","assert","app","showing","sender","key","style","removeProperty","display","shown","add","closed","remove","document","createElement","tagName","appendChild","args","forceRender","openPage","Application","DefaultContainerName","currentPage","getPage","findPageAction","actionCanntNull","show","pushPage","close","filter","o","push","length","shift","closePage","routeData","parseUrl","findSiteMapNode","pageNodeNotExists","passData","pop","assign","toString","Function","prototype","fnBody","fn","call","replace","test"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\ndefine([\"require\", \"exports\", \"maishu-chitu-service\", \"./Page\", \"./Application\", \"./Errors\"], function (require, exports, maishu_chitu_service_1, Page_1, Application_1, Errors_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class PageMaster {\r\n        constructor(containers, parser) {\r\n            this.pageCreated = maishu_chitu_service_1.Callbacks();\r\n            this.pageShowing = maishu_chitu_service_1.Callbacks();\r\n            this.pageShown = maishu_chitu_service_1.Callbacks();\r\n            this.pageType = Page_1.Page;\r\n            this.pageDisplayType = Page_1.PageDisplayerImplement;\r\n            this.cachePages = {};\r\n            this.page_stack = new Array();\r\n            this.nodes = {};\r\n            this.MAX_PAGE_COUNT = 100;\r\n            this.error = maishu_chitu_service_1.Callbacks();\r\n            this.parser = parser || this.defaultPageNodeParser();\r\n            if (!containers)\r\n                throw Errors_1.Errors.argumentNull(\"containers\");\r\n            this.parser.actions = this.parser.actions || {};\r\n            this.containers = containers;\r\n        }\r\n        defaultPageNodeParser() {\r\n            let nodes = {};\r\n            let p = {\r\n                actions: {},\r\n                parse: (pageName) => {\r\n                    let node = nodes[pageName];\r\n                    if (node == null) {\r\n                        let path = `modules_${pageName}`.split('_').join('/');\r\n                        node = { action: this.createDefaultAction(path, this.loadjs), name: pageName };\r\n                        nodes[pageName] = node;\r\n                    }\r\n                    return node;\r\n                }\r\n            };\r\n            return p;\r\n        }\r\n        createDefaultAction(url, loadjs) {\r\n            return (page) => __awaiter(this, void 0, void 0, function* () {\r\n                let actionExports = yield loadjs(url);\r\n                if (!actionExports)\r\n                    throw Errors_1.Errors.exportsCanntNull(url);\r\n                let _action = actionExports.default;\r\n                if (_action == null) {\r\n                    throw Errors_1.Errors.canntFindAction(page.name);\r\n                }\r\n                let result;\r\n                if (PageMaster.isClass(_action)) {\r\n                    let action = _action;\r\n                    result = new action(page, this);\r\n                }\r\n                else {\r\n                    let action = _action;\r\n                    result = action(page, this);\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        loadjs(path) {\r\n            return new Promise((reslove, reject) => {\r\n                requirejs([path], function (result) {\r\n                    reslove(result);\r\n                }, function (err) {\r\n                    reject(err);\r\n                });\r\n            });\r\n        }\r\n        on_pageCreated(page) {\r\n            return this.pageCreated.fire(this, page);\r\n        }\r\n        get currentPage() {\r\n            if (this.page_stack.length > 0)\r\n                return this.page_stack[this.page_stack.length - 1];\r\n            return null;\r\n        }\r\n        getPage(pageUrl, containerName, values) {\r\n            if (!pageUrl)\r\n                throw Errors_1.Errors.argumentNull('pageUrl');\r\n            values = values || {};\r\n            let cachePage = this.cachePages[`${containerName}_${pageUrl}`];\r\n            if (cachePage != null) {\r\n                cachePage.data = values || {};\r\n                return { page: cachePage, isNew: false };\r\n            }\r\n            let page = this.createPage(pageUrl, containerName, values);\r\n            this.cachePages[pageUrl] = page;\r\n            this.on_pageCreated(page);\r\n            return { page, isNew: true };\r\n        }\r\n        createPage(pageUrl, containerName, values) {\r\n            if (!pageUrl)\r\n                throw Errors_1.Errors.argumentNull('pageUrl');\r\n            if (!containerName)\r\n                throw Errors_1.Errors.argumentNull('containerName');\r\n            values = values || {};\r\n            let element = this.createPageElement(pageUrl, containerName);\r\n            let displayer = new this.pageDisplayType(this);\r\n            let container = this.containers[containerName];\r\n            if (!container)\r\n                throw Errors_1.Errors.containerIsNotExists(containerName);\r\n            console.assert(this.pageType != null);\r\n            let page = new this.pageType({\r\n                app: this,\r\n                url: pageUrl,\r\n                data: values,\r\n                displayer,\r\n                element,\r\n                container,\r\n            });\r\n            let showing = (sender) => {\r\n                for (let key in this.containers) {\r\n                    if (this.containers[key] == sender.container) {\r\n                        sender.container.style.removeProperty('display');\r\n                        continue;\r\n                    }\r\n                    this.containers[key].style.display == 'none';\r\n                }\r\n                this.pageShowing.fire(this, sender);\r\n            };\r\n            let shown = (sender) => {\r\n                this.pageShown.fire(this, sender);\r\n            };\r\n            page.showing.add(showing);\r\n            page.shown.add(shown);\r\n            page.closed.add(() => {\r\n                page.showing.remove(showing);\r\n                page.shown.remove(shown);\r\n            });\r\n            return page;\r\n        }\r\n        createPageElement(pageName, containerName) {\r\n            if (!containerName)\r\n                throw Errors_1.Errors.argumentNull('containerName');\r\n            let container = this.containers[containerName];\r\n            if (!container)\r\n                throw Errors_1.Errors.containerIsNotExists(containerName);\r\n            let element = document.createElement(Page_1.Page.tagName);\r\n            container.appendChild(element);\r\n            return element;\r\n        }\r\n        showPage(pageUrl, args, forceRender) {\r\n            return this.openPage(pageUrl, Application_1.Application.DefaultContainerName, args, forceRender);\r\n        }\r\n        openPage(pageUrl, containerName, args, forceRender) {\r\n            args = args || {};\r\n            forceRender = forceRender == null ? false : true;\r\n            if (!pageUrl)\r\n                throw Errors_1.Errors.argumentNull('pageName');\r\n            if (this.currentPage != null && this.currentPage.url == pageUrl)\r\n                return this.currentPage;\r\n            let { page, isNew } = this.getPage(pageUrl, containerName, args);\r\n            if (isNew || forceRender) {\r\n                let action = this.findPageAction(pageUrl);\r\n                if (action == null)\r\n                    throw Errors_1.Errors.actionCanntNull(pageUrl);\r\n                action(page, this);\r\n            }\r\n            page.show();\r\n            this.pushPage(page);\r\n            console.assert(page == this.currentPage, \"page is not current page\");\r\n            return page;\r\n        }\r\n        closePage(page) {\r\n            if (page == null)\r\n                throw Errors_1.Errors.argumentNull('page');\r\n            page.close();\r\n            delete this.cachePages[page.url];\r\n            this.page_stack = this.page_stack.filter(o => o != page);\r\n        }\r\n        pushPage(page) {\r\n            this.page_stack.push(page);\r\n            if (this.page_stack.length > this.MAX_PAGE_COUNT) {\r\n                let page = this.page_stack.shift();\r\n                if (page)\r\n                    this.closePage(page);\r\n            }\r\n        }\r\n        findPageAction(pageUrl) {\r\n            let routeData = Application_1.parseUrl(pageUrl);\r\n            let pageName = routeData.pageName;\r\n            let node = this.findSiteMapNode(pageName);\r\n            if (node == null)\r\n                throw Errors_1.Errors.pageNodeNotExists(pageName);\r\n            let action = node.action;\r\n            if (action == null)\r\n                throw Errors_1.Errors.actionCanntNull(pageName);\r\n            return node.action;\r\n        }\r\n        findSiteMapNode(pageName) {\r\n            if (this.nodes[pageName])\r\n                return this.nodes[pageName];\r\n            let node = null;\r\n            let action = this.parser.actions ? this.parser.actions[pageName] : null;\r\n            if (action != null) {\r\n                node = { action, name: pageName };\r\n            }\r\n            if (node == null && this.parser.parse != null) {\r\n                node = this.parser.parse(pageName);\r\n                console.assert(node.action != null);\r\n            }\r\n            if (node != null)\r\n                this.nodes[pageName] = node;\r\n            return node;\r\n        }\r\n        closeCurrentPage(passData) {\r\n            var page = this.page_stack.pop();\r\n            if (page == null)\r\n                return;\r\n            this.closePage(page);\r\n            if (this.currentPage) {\r\n                if (passData) {\r\n                    console.assert(this.currentPage.data != null);\r\n                    this.currentPage.data = Object.assign(this.currentPage.data, passData);\r\n                }\r\n                this.currentPage.show();\r\n            }\r\n        }\r\n        get pageStack() {\r\n            return this.page_stack;\r\n        }\r\n    }\r\n    PageMaster.isClass = (function () {\r\n        var toString = Function.prototype.toString;\r\n        function fnBody(fn) {\r\n            return toString.call(fn).replace(/^[^{]*{\\s*/, '').replace(/\\s*}[^}]*$/, '');\r\n        }\r\n        function isClass(fn) {\r\n            return (typeof fn === 'function' &&\r\n                (/^class(\\s|\\{\\}$)/.test(toString.call(fn)) ||\r\n                    (/^.*classCallCheck\\(/.test(fnBody(fn)))));\r\n        }\r\n        return isClass;\r\n    })();\r\n    exports.PageMaster = PageMaster;\r\n});\r\n"],"file":"PageMaster.js"}